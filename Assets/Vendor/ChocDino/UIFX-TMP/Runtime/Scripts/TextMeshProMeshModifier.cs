//--------------------------------------------------------------------------//
// Copyright 2023-2025 Chocolate Dinosaur Ltd. All rights reserved.         //
// For full documentation visit https://www.chocolatedinosaur.com           //
//--------------------------------------------------------------------------//

#if UIFX_TMPRO

using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;
using UnityInternal = UnityEngine.Internal;
using TMPro;
using UnityEngine.TextCore.Text;

namespace ChocDino.UIFX
{
	/// <summary>
	/// Takes the geometry generated by TextMeshPro and modifies the vertices by applying any Components that inherit IMeshModifier.
	/// Supports sprites (submeshes).
	/// Tested with TextMeshPro v2.1.6 (Unity 2019), v2.2.0-preview.3 (Unity 2019), v3.0.8 (Unity 2020), 3.2.0-pre.9 (Unity 2022)
	/// Needs optimising of temporary Mesh caching, using too many component channels in VertexHelper
	/// </summary>
	[ExecuteInEditMode]
	[RequireComponent(typeof(TextMeshProUGUI))]
	[HelpURL("https://www.chocdino.com/products/unity-assets/")]
	[AddComponentMenu("UI/Chocolate Dinosaur UIFX/Effects/UIFX - TextMeshPro Mesh Modifier", 100)]
	public class TextMeshProMeshModifier : UIBehaviour
	{
		private Graphic _graphic;
		private Graphic GraphicComponent { get { if (_graphic == null) _graphic = GetComponent<Graphic>(); return _graphic; } }

		private TextMeshProUGUI _textMeshPro;

		private List<IMeshModifier> _modifiers = new List<IMeshModifier>(8);
		private List<TMP_SubMeshUI> _subMeshes = new List<TMP_SubMeshUI>(8);

		private Mesh _processMesh;

		[UnityInternal.ExcludeFromDocs]
		protected override void Awake()
        {
        }

        [UnityInternal.ExcludeFromDocs]
		protected override void OnEnable()
        {
        }

        [UnityInternal.ExcludeFromDocs]
        protected override void OnDisable()
        {
        }

        private void OnTextGeomeryRebuilt(Object obj)
        {
        }

        private void ApplyMeshModifiers()
        {
        }

        private void ModifyMesh(List<IMeshModifier> modifiers, Mesh mesh, CanvasRenderer cr)
        {
        }
    }
}
#endif